version: '3.8'

services:
  routeros:
    image: ${ROUTEROS_IMAGE:-evilfreelancer/docker-routeros:latest}
    container_name: ${CONTAINER_NAME:-routeros}
    hostname: ${HOSTNAME:-routeros}
    privileged: true
    restart: ${RESTART_POLICY:-unless-stopped}
    platform: ${PLATFORM:-linux/amd64}

    # Healthcheck configuration
    healthcheck:
      # Try netcat first (preferred)
      test: ["CMD-SHELL", "nc -z 127.0.0.1 ${API_PORT:-8728} || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 60       # ~5 minutes max
      start_period: 30s # give RouterOS time to boot
    
    # Environment variables for initial configuration
    environment:
      ROUTEROS_USER: ${ROUTEROS_USER:-admin}
      ROUTEROS_PASS: ${ROUTEROS_PASS:-admin}
      ROUTEROS_LICENSE: ${ROUTEROS_LICENSE:-true}
    
    # Ports to expose
    ports:
      - "${WINBOX_PORT:-8291}:8291"       # Winbox
      - "${API_PORT:-8728}:8728"          # API
      - "${API_SSL_PORT:-8729}:8729"      # API-SSL
      - "${FTP_PORT:-21}:21"              # FTP
      - "${SSH_PORT:-22}:22"              # SSH
      - "${TELNET_PORT:-23}:23"           # Telnet
      - "${HTTP_PORT:-80}:80"             # HTTP
      - "${HTTPS_PORT:-443}:443"          # HTTPS
      - "${HTTP_PROXY_PORT:-8080}:8080"   # HTTP Proxy
      - "${OPENVPN_PORT:-1194}:1194"      # OpenVPN
    
    # Network configuration
    networks:
      routeros-net:
        ipv4_address: ${ROUTEROS_IP:-172.20.0.2}
    
    # Volumes for persistent storage
    volumes:
      - ${VOLUME_NAME:-routeros-data}:/routeros
    
    # Additional capabilities
    cap_add:
      - NET_ADMIN
      - NET_RAW
    
    # Device access for networking
    devices:
      - /dev/net/tun

# Network definition
networks:
  routeros-net:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET:-172.20.0.0/24}
          gateway: ${NETWORK_GATEWAY:-172.20.0.1}

# Volume for persistent storage
volumes:
  routeros-data:
    driver: local